version: 2.1
executors:
  docker-publisher:
    docker:
      - image: circleci/buildpack-deps:stretch
jobs:
  build:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.06.0-ce
          docker_layer_caching: true
          
      - run:
          name: Make image
          command: docker build --pull --build-arg CACHEBUST=${CIRCLE_SHA1} -t ${IMAGE_NAME}:build .
      
      - run:
          name: Archive Docker image
          command: docker save -o image.tar ${IMAGE_NAME}:build
      
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar

  publish-patch:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace 
      - setup_remote_docker:
          version: 18.06.0-ce
          docker_layer_caching: true
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Get version
          command: echo 'export IMAGE_TAG="'$(docker run --rm alpine/semver semver -c patch ${CIRCLE_TAG})'"' >> $BASH_ENV
      - run:
          name: Pushing patch
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USER" --password-stdin
            docker tag ${IMAGE_NAME}:build ${IMAGE_NAME}:${IMAGE_TAG} && docker push ${IMAGE_NAME}:${IMAGE_TAG}

  publish-minor:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace 
      - setup_remote_docker:
          version: 18.06.0-ce
          docker_layer_caching: true
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Get version
          command: echo 'export IMAGE_TAG="'$(docker run --rm alpine/semver semver -c minor ${CIRCLE_TAG})'"' >> $BASH_ENV
      - run:
          name: Pushing minor
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USER" --password-stdin
            docker tag ${IMAGE_NAME}:build ${IMAGE_NAME}:${IMAGE_TAG} && docker push ${IMAGE_NAME}:${IMAGE_TAG}

  publish-major:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace 
      - setup_remote_docker:
          version: 18.06.0-ce
          docker_layer_caching: true
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Get version
          command: echo 'export IMAGE_TAG="'$(docker run --rm alpine/semver semver -c major ${CIRCLE_TAG})'"' >> $BASH_ENV
      - run:
          name: Pushing major
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USER" --password-stdin
            docker tag ${IMAGE_NAME}:build ${IMAGE_NAME}:${IMAGE_TAG} && docker push ${IMAGE_NAME}:${IMAGE_TAG}

  publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace 
      - setup_remote_docker:
          version: 18.06.0-ce
          docker_layer_caching: true
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Pushing latest
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USER" --password-stdin
            docker tag ${IMAGE_NAME}:build ${IMAGE_NAME}:latest && docker push ${IMAGE_NAME}:latest
workflows:
      version: 2
      build-tag:
        jobs:
          - build:
              filters:
                tags:
                  only: /.*/
          - publish-patch:
              requires:
                - build
              filters:
                tags:
                  only: /.*/
          - publish-minor:
              requires:
                - build
              filters:
                tags:
                  only: /.*/
          - publish-major:
              requires:
                - build
              filters:
                tags:
                  only: /.*/
          - publish-latest:
              requires:
                - build
              filters:
                tags:
                  only: /.*/